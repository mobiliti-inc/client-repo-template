# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  unit-tests:
    docker:
      - image: circleci/node:8.12.0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Run tests
          command: npm test
  analyse:
    docker:
      - image: circleci/node:8.12.0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Install SonarQube
          command: |
            sudo apt update
            sudo apt install -y wget unzip
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.0.0.1744-linux.zip
            unzip sonar-scanner-cli-4.0.0.1744-linux.zip -d ~/sonar-scanner
            chmod +x ~/sonar-scanner/sonar-scanner-4.0.0.1744-linux/bin/sonar-scanner
      - run:
          name: Run SonarQube
          command: |
            ~/sonar-scanner/sonar-scanner-4.0.0.1744-linux/bin/sonar-scanner \
              -Dsonar.projectKey=core-admin-ui \
              -Dsonar.sources=. \
              -Dsonar.host.url=$SONAR_HOST_URL \
              -Dsonar.login=$SONAR_LOGIN_KEY
  update-static-image:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      resource-name:
        description: |
          Name of the resource to update
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl delete rs -l app=<< parameters.resource-name >>
          name: Delete Replica Set
  update-tagged-image:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      resource-name:
        description: |
          Name of the resource to update
        type: string
      image:
        description: |
          Image URL of new image
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl set image deployment/<< parameters.resource-name >> << parameters.resource-name >>=<< parameters.image >>
          name: Delete Replica Set

orbs:
  aws-ecr: circleci/aws-ecr@3.1.0
  kubernetes: circleci/kubernetes@0.3.0
  aws-eks: circleci/aws-eks@0.2.2

workflows:
  branch:
    jobs:
      - unit-tests
      - analyse:
          requires:
            - unit-tests
      - aws-ecr/build_and_push_image:
          name: build-image-staging
          context: AWS Keys Prod
          repo: core-admin-ui
          tag: test
          requires:
            - analyse
          filters:
            branches:
              only: develop
      - aws-ecr/build_and_push_image:
          name: build-image-production
          context: AWS Keys Prod
          repo: core-admin-ui
          tag: ${CIRCLE_TAG}
          requires:
            - analyse
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - update-static-image:
          name: deploy-admin-ui-staging
          context: AWS Keys Prod
          cluster-name: core-staging-cluster
          resource-name: admin-ui
          requires:
            - build-image-staging
          filters:
            branches:
              only: develop
      - update-static-image:
          name: deploy-storybook-staging
          context: AWS Keys Prod
          cluster-name: core-staging-cluster
          resource-name: storybook
          requires:
            - build-image-staging
          filters:
            branches:
              only: develop
      - update-tagged-image:
          name: deploy-admin-ui-production
          context: AWS Keys Prod
          cluster-name: core-production-cluster
          resource-name: admin-ui
          image: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/core-admin-ui:${CIRCLE_TAG}"
          requires:
            - build-image-production
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
